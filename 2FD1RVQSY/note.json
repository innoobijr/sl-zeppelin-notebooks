{
  "paragraphs": [
    {
      "text": "/**\n * title: Home Identification \n * author: Ziyu Ran\n * Timeï¼š 2020/07/03\n * description: \n */",
      "user": "innocent",
      "dateUpdated": "2020-07-20 17:32:11.182",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "java.net.ConnectException: Connection refused (Connection refused)\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\n\tat java.net.Socket.connect(Socket.java:607)\n\tat org.apache.thrift.transport.TSocket.open(TSocket.java:182)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:51)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:37)\n\tat org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:60)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:861)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.getClient(RemoteInterpreterProcess.java:62)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction(RemoteInterpreterProcess.java:133)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.internal_create(RemoteInterpreter.java:165)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open(RemoteInterpreter.java:132)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getFormType(RemoteInterpreter.java:299)\n\tat org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:408)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:188)\n\tat org.apache.zeppelin.scheduler.RemoteScheduler$JobRunner.run(RemoteScheduler.java:315)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1595266312734_688795175",
      "id": "20200713-162914_1692007856",
      "dateCreated": "2020-07-20 17:31:52.734",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\nimport os\nfrom datetime import datetime\nimport matplotlib.pyplot as plt\nfrom pyspark.sql import SQLContext\n\nfrom pyspark.sql.types import StructType, StructField, StringType, IntegerType\nfrom pyspark.sql.functions import split, lower\nimport pyspark.sql.functions as F",
      "user": "innocent",
      "dateUpdated": "2020-07-20 17:31:52.738",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1595266312737_586532445",
      "id": "20200715-134628_1435706817",
      "dateCreated": "2020-07-20 17:31:52.737",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\n\nACCESS_KEY \u003d os.environ[\u0027AWS_ID\u0027]\nSECRET_KEY \u003d os.environ[\u0027AWS_SECRET\u0027]\n# Just some configuration for Spark to be able to use AWS S3\nsc._jsc.hadoopConfiguration().set(\"fs.s3n.awsAccessKeyId\", ACCESS_KEY)\nsc._jsc.hadoopConfiguration().set(\"fs.s3n.awsSecretAccessKey\", SECRET_KEY)\n\nsq \u003d SQLContext(sc)\n",
      "user": "innocent",
      "dateUpdated": "2020-07-20 17:31:52.738",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1595266312738_511106015",
      "id": "20200712-230457_673617609",
      "dateCreated": "2020-07-20 17:31:52.738",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\n\nnames\u003d{\u0027subscriber\u0027:StringType(), \u0027site_id\u0027:StringType(), \u0027call_date\u0027:StringType(), \u0027STOP_ID\u0027:IntegerType(), \u0027start_time\u0027:StringType(), \u0027end_time\u0027:StringType(), \u0027frequency\u0027:IntegerType(), \u0027event_gap\u0027:IntegerType(), \u0027duration\u0027:IntegerType(), \u0027confidence\u0027: StringType()}\nfields\u003d[]\nfor header in names:\n    fields.append(StructField(header, names[header], False))\nschema \u003d StructType(fields)\n\ndf \u003d sq.read.option(\"header\", \"true\").csv(\u0027s3n://sierra-leone-lake/blob/AGGREGATED_CDRS/africell/stops/feb/*.csv\u0027, schema\u003dschema)",
      "user": "innocent",
      "dateUpdated": "2020-07-20 17:31:52.739",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1595266312738_695936440",
      "id": "20200712-231307_2108629871",
      "dateCreated": "2020-07-20 17:31:52.738",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\ndf \u003d df.withColumn(\"call_datetime\", F.to_date(\"call_date\"))\\\n        .withColumn(\"start\", F.to_timestamp(\"start_time\"))\\\n        .withColumn(\"end\", F.to_timestamp(\"end_time\"))\\\n        .withColumn(\"start_hour\", F.hour(\"start\"))\\\n        .withColumn(\"weekday\", F.date_format(\"start\", \"u\"))\\\n        .drop(\u0027call_date\u0027, \u0027start_time\u0027, \u0027end_time\u0027) # Drop columns which we\u0027ll not use",
      "user": "innocent",
      "dateUpdated": "2020-07-20 17:31:52.740",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1595266312739_2025713682",
      "id": "20200712-231632_918139233",
      "dateCreated": "2020-07-20 17:31:52.739",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\ndf \u003d df.withColumn(\"start_hour\", df[\"start_hour\"].cast(IntegerType()))\n",
      "user": "innocent",
      "dateUpdated": "2020-07-20 17:31:52.742",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1595266312740_-1268245063",
      "id": "20200713-170504_401747544",
      "dateCreated": "2020-07-20 17:31:52.740",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\n\nhometime \u003d df.where(\"start_hour \u003c 8 or start_hour \u003e 20\")\n",
      "user": "innocent",
      "dateUpdated": "2020-07-20 17:31:52.743",
      "config": {
        "lineNumbers": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1595266312742_1122613243",
      "id": "20200713-164816_2019173487",
      "dateCreated": "2020-07-20 17:31:52.742",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\nhome \u003d hometime\\\n        .groupBy(\u0027subscriber\u0027, \u0027site_id\u0027)\\\n        .agg(F.sum(\u0027frequency\u0027).alias(\u0027total_freq\u0027))\\\n        .where(\"total_freq \u003e\u003d 5\")",
      "user": "innocent",
      "dateUpdated": "2020-07-20 17:31:52.743",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1595266312743_259711181",
      "id": "20200713-171704_1371373909",
      "dateCreated": "2020-07-20 17:31:52.743",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\nhome.count()",
      "user": "innocent",
      "dateUpdated": "2020-07-20 17:31:52.745",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "3242454\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1595266312744_-402096327",
      "id": "20200713-173824_286377115",
      "dateCreated": "2020-07-20 17:31:52.744",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\nfrom pyspark.sql import Window\nw \u003d Window.partitionBy(\u0027subscriber\u0027)\nhome2 \u003d home.withColumn(\u0027maxfreq\u0027, F.max(\u0027total_freq\u0027).over(w))\\\n        .where(F.col(\u0027total_freq\u0027) \u003d\u003d F.col(\u0027maxfreq\u0027))\\\n        .drop(\u0027total_freq\u0027)",
      "user": "innocent",
      "dateUpdated": "2020-07-20 17:31:52.746",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1595266312745_-639082630",
      "id": "20200713-204011_1957155020",
      "dateCreated": "2020-07-20 17:31:52.745",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\nhome4 \u003d home2.dropDuplicates([\"subscriber\"])",
      "user": "innocent",
      "dateUpdated": "2020-07-20 17:31:52.747",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1595266312747_1275017157",
      "id": "20200715-134815_2059341763",
      "dateCreated": "2020-07-20 17:31:52.747",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\nhome4.count()",
      "user": "innocent",
      "dateUpdated": "2020-07-20 17:31:52.748",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "1558746\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1595266312747_-617963421",
      "id": "20200714-145833_1366964030",
      "dateCreated": "2020-07-20 17:31:52.747",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\n",
      "user": "innocent",
      "dateUpdated": "2020-07-20 17:31:52.749",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1595266312749_-1669995815",
      "id": "20200717-213811_619210320",
      "dateCreated": "2020-07-20 17:31:52.749",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\nhomeIdenPath \u003d \"s3n://sierra-leone-lake/blob/AGGREGATED_CDRS/africell/home_identification_feb/home_identity_feb_0717_Ziyu\"\nhome4.write.format(\"csv\").option(\"header\", \"true\").save(homeIdenPath)",
      "user": "innocent",
      "dateUpdated": "2020-07-20 17:31:52.751",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1595266312750_1085464233",
      "id": "20200716-211911_1939123741",
      "dateCreated": "2020-07-20 17:31:52.750",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\nhome_location \u003d home4\\\n                .groupBy(\u0027site_id\u0027)\\\n                .agg(F.count(\u0027subscriber\u0027).alias(\u0027home_number\u0027))",
      "user": "innocent",
      "dateUpdated": "2020-07-20 17:31:52.752",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------+-----------+\n|site_id|home_number|\n+-------+-----------+\n|   4032|       1175|\n|   2088|       2427|\n|   3606|       2908|\n|   2069|       1411|\n|   1436|        389|\n|   3414|        161|\n|   3517|       1830|\n|   3441|       3252|\n|   2110|       1049|\n|   3526|       1867|\n|   1280|      15533|\n|   2034|      11973|\n|   3491|        731|\n|   1425|       6877|\n|   3553|       2252|\n|   2249|       2854|\n|   3408|       1584|\n|   1418|       2639|\n|   4078|        681|\n|   3641|          2|\n+-------+-----------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1595266312751_908920808",
      "id": "20200714-154706_1003174720",
      "dateCreated": "2020-07-20 17:31:52.751",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\nhome_location.count()",
      "user": "innocent",
      "dateUpdated": "2020-07-20 17:31:52.753",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "604\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1595266312752_-154035652",
      "id": "20200714-163653_2061101743",
      "dateCreated": "2020-07-20 17:31:52.752",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\ntowers \u003d sq.read.csv(\"s3n://sierra-leone-lake/blob/TOWERS/africell/sites_2020-07-03.csv\", header\u003d\"true\")",
      "user": "innocent",
      "dateUpdated": "2020-07-20 17:31:52.754",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------+-----+----------------+----------------+--------+----------+----------+----------------+----------------+--------------+\n|site_id|   CI|         BTSNAME|            Name|Latitude| longitude|  location|        New_Dist|      New_Dist_1|     New_Chief|\n+-------+-----+----------------+----------------+--------+----------+----------+----------------+----------------+--------------+\n|   1000|10008|  MOUNTAUREOL_II|  MOUNTAUREOL_II|8.480993|-13.218795|FT CENTRAL|Western Area Urb|Western Area Urb|       East II|\n|   1001|10018|       CONGOTOWN|       CONGOTOWN|8.483741|-13.256992|   FT WEST|Western Area Urb|Western Area Urb|       West II|\n|   1002|10028|SPURROADMILITARY|SPURROADMILITARY| 8.47093| -13.27157|   FT WEST|Western Area Urb|Western Area Urb|      West III|\n|   1003|10039|       DEVILHOLE|       DEVILHOLE| 8.36205|  -13.0783|   FT EAST|Western Area Rur|Western Area Rur|Waterloo Rural|\n|   1004|10047|      KISSYHOUSE|      KISSYHOUSE| 8.48401|  -13.2384|FT CENTRAL|Western Area Urb|Western Area Urb|    Central II|\n|   1005|10058|         SLCB_II|         SLCB_II| 8.48795|  -13.2352|FT CENTRAL|Western Area Urb|Western Area Urb|    Central II|\n|   1006|10069|      ROCKELBANK|      ROCKELBANK| 8.48867|  -13.2315|FT CENTRAL|Western Area Urb|Western Area Urb|     Central I|\n|   1007|10078|       KISSYROAD|       KISSYROAD| 8.48721|  -13.2225|FT CENTRAL|Western Area Urb|Western Area Urb|        East I|\n|   1008|10088|       CLINETOWN|       CLINETOWN|8.491377|-13.209388|FT CENTRAL|Western Area Urb|Western Area Urb|        East I|\n|   1009|10092|       BARMHOTEL|       BARMHOTEL| 8.49561| -13.29665|   FT WEST|Western Area Urb|Western Area Urb|      West III|\n|   1010|10106|       BINTUMANI|       BINTUMANI| 8.49647| -13.28725|   FT WEST|Western Area Urb|Western Area Urb|      West III|\n|   1011|10118|          MAHERA|          MAHERA|8.605081|-13.198528| Air Port-|       Port Loko|       Port Loko|  Kaffu Bullom|\n|   1012|10128|          TAGRIN|          TAGRIN|8.522981|-13.148938| Air Port-|       Port Loko|       Port Loko|  Kaffu Bullom|\n|   1013|10138|    LUNGIAIRPORT|    LUNGIAIRPORT|8.615386|-13.202306| Air Port-|       Port Loko|       Port Loko|  Kaffu Bullom|\n|   1014|10148|     HAGANSTREET|     HAGANSTREET| 8.48832| -13.22643|FT CENTRAL|Western Area Urb|Western Area Urb|       East II|\n|   1015|10159|   KENNEDYSTREET|   KENNEDYSTREET| 8.48441| -13.21461|FT CENTRAL|Western Area Urb|Western Area Urb|        East I|\n|   1016|10166|   MOUNTAINCOURT|   MOUNTAINCOURT| 8.48111| -13.22819|FT CENTRAL|Western Area Urb|Western Area Urb|     Central I|\n|   1017|10182|   GODRECHSTREET|         ADONKIA|8.413635|-13.264048|FT CENTRAL|Western Area Rur|Western Area Rur|    York Rural|\n|   1018|10201|      KINGHARMAN|   GODRECHSTREET| 8.48674|  -13.2289|   FT WEST|Western Area Urb|Western Area Urb|     Central I|\n|   1019|10202|      KINGHARMAN|    BATHURSTREET| 8.48599|  -13.2375|   FT WEST|Western Area Urb|Western Area Urb|    Central II|\n+-------+-----+----------------+----------------+--------+----------+----------+----------------+----------------+--------------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1595266312753_1438076452",
      "id": "20200714-192350_1911724967",
      "dateCreated": "2020-07-20 17:31:52.753",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\nhome_loc \u003d home_location.alias(\"h\")\\\n        .join(towers.alias(\"t\"), towers.site_id\u003d\u003dhome_location.site_id)\\\n        .select(\"t.site_id\", \"h.home_number\", \"t.Latitude\",\"t.longitude\")\nhome_loc.show()",
      "user": "innocent",
      "dateUpdated": "2020-07-20 17:31:52.755",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------+-----------+--------+----------+\n|site_id|home_number|Latitude| longitude|\n+-------+-----------+--------+----------+\n|   1000|       1305|8.480993|-13.218795|\n|   1001|       2990|8.483741|-13.256992|\n|   1002|       1068| 8.47093| -13.27157|\n|   1003|       8849| 8.36205|  -13.0783|\n|   1004|       3641| 8.48401|  -13.2384|\n|   1005|        555| 8.48795|  -13.2352|\n|   1006|       4096| 8.48867|  -13.2315|\n|   1007|       6875| 8.48721|  -13.2225|\n|   1008|       3909|8.491377|-13.209388|\n|   1009|        816| 8.49561| -13.29665|\n|   1010|        951| 8.49647| -13.28725|\n|   1011|       2163|8.605081|-13.198528|\n|   1012|       2999|8.522981|-13.148938|\n|   1013|       4800|8.615386|-13.202306|\n|   1014|       5036| 8.48832| -13.22643|\n|   1015|       7113| 8.48441| -13.21461|\n|   1016|       4093| 8.48111| -13.22819|\n|   1017|       8025|8.413635|-13.264048|\n|   1018|       2971| 8.48674|  -13.2289|\n|   1019|        684| 8.48599|  -13.2375|\n+-------+-----------+--------+----------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1595266312754_-642850480",
      "id": "20200714-192806_1808482834",
      "dateCreated": "2020-07-20 17:31:52.754",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\nhomeLocationPath \u003d \"s3n://sierra-leone-lake/blob/AGGREGATED_CDRS/africell/home_identification_feb/home_location_feb_0717_Ziyu\"\nhome_loc.coalesce(1).write.format(\"csv\").option(\u0027header\u0027, \u0027true\u0027).save(homeLocationPath)",
      "user": "innocent",
      "dateUpdated": "2020-07-20 17:31:52.756",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1595266312755_-1415567149",
      "id": "20200714-154437_1819872603",
      "dateCreated": "2020-07-20 17:31:52.755",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\n# get the count\nd \u003d [{\u0027original\u0027: df.count(), \u0027afterfreq\u0027:home.count(), \u0027home\u0027:home4.count(),\u0027home_location\u0027:home_loc.count() }]\ncountdf \u003d spark.createDataFrame(d)",
      "user": "innocent",
      "dateUpdated": "2020-07-20 17:31:52.758",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1595266312757_1993506139",
      "id": "20200716-215938_1854259191",
      "dateCreated": "2020-07-20 17:31:52.757",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\ncountLocationPath \u003d \"s3n://sierra-leone-lake/blob/AGGREGATED_CDRS/africell/home_identification_feb/count_feb\"\ncountdf.coalesce(1).write.format(\"csv\").option(\u0027header\u0027, \u0027true\u0027).save(countLocationPath)",
      "user": "innocent",
      "dateUpdated": "2020-07-20 17:31:52.759",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1595266312758_1423733537",
      "id": "20200716-215949_1149936468",
      "dateCreated": "2020-07-20 17:31:52.758",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "MIT/production/home_identification_feb",
  "id": "2FD1RVQSY",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}