{
  "paragraphs": [
    {
      "text": "/**\n * title: od_matrix_directed_consecutive_pairs_per_day\n * author: Innocent Obi Jr\n * description: \n */\n \n//Default configurations (Remove in production)\nsc.hadoopConfiguration.set(\"fs.s3n.awsAccessKeyId\", System.getenv(\"AWS_ID\"))\nsc.hadoopConfiguration.set(\"fs.s3n.awsSecretAccessKey\", System.getenv(\"AWS_SECRET\"))\n\nval path_to_cdrs : String \u003d \"s3n://sierra-leone-lake/blob/cdrs/africell-raw/20200403_1[4-6].csv\"\nval path_to_towers \u003d \"s3n://sierra-leone-lake/blob/towers/combined_towers_district_07_11.csv\"\nval cutoff : Int \u003d 15",
      "user": "anonymous",
      "dateUpdated": "2020-07-13 00:47:13.655",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "path_to_cdrs: String \u003d s3n://sierra-leone-lake/blob/cdrs/africell-raw/20200403_1[4-6].csv\npath_to_towers: String \u003d s3n://sierra-leone-lake/blob/towers/combined_towers_district_07_11.csv\ncutoff: Int \u003d 15\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1594008440530_1473109308",
      "id": "20200706-005851_206717772",
      "dateCreated": "2020-07-06 04:07:20.530",
      "dateStarted": "2020-07-13 00:47:13.663",
      "dateFinished": "2020-07-13 00:47:13.987",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "implicit class DataframeOps(df: org.apache.spark.sql.DataFrame){\n    def path_to_ouput(filename: String): String \u003d  s\"s3n://sierra-leone-lake/blob/AGGREGATED_CDRS/africell/flowminder/$filename\"\n    def saveToS3(filename: String) : Unit \u003d df.write.format(\"csv\").option(\"header\", \"true\").save(path_to_ouput(filename))\n}",
      "user": "anonymous",
      "dateUpdated": "2020-07-13 00:47:15.727",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "defined class DataframeOps\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1594601156027_1361654984",
      "id": "20200713-004556_1490630606",
      "dateCreated": "2020-07-13 00:45:56.027",
      "dateStarted": "2020-07-13 00:47:15.733",
      "dateFinished": "2020-07-13 00:47:15.842",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "/**\n * \n */\n\nimport org.apache.spark.sql.functions.{split, lit, window, concat, unix_timestamp, to_timestamp, date_format}\nimport org.apache.spark.sql.types._\n//import org.apache.spark.sql._\nimport org.apache.spark.sql.expressions.Window\nimport spark.implicits._\nimport org.apache.spark.storage.StorageLevel\n\n val calls \u003d spark.read.format(\"csv\")\n    .option(\"header\",\"false\")\n    .option(\"inferSchema\", \"true\")\n    .load(path_to_cdrs)\n    .withColumnRenamed(\"_c0\", \"antenna_id\")\n    .withColumnRenamed(\"_c1\", \"time\")\n    .withColumnRenamed(\"_c2\", \"direction\")\n    .withColumnRenamed(\"_c3\", \"source\")\n    .withColumn(\"msisdn\", col(\"source\"))\n    .withColumnRenamed(\"_c4\", \"target\")\n    .withColumnRenamed(\"_c5\", \"duration\")\n    .withColumn(\"site_id\", substring(col(\"antenna_id\"), 0, 4))\n    .withColumn(\"call_datetime\", to_timestamp($\"time\"))\n    .withColumn(\"call_date\", to_date($\"call_datetime\"))\n    .withColumn(\"end_time\",  to_timestamp(unix_timestamp($\"call_datetime\") + ($\"duration\")))\n    \n\nval cells \u003d spark.read.format(\"csv\")\n  .option(\"header\", true)\n  .option(\"inferSchema\", true)\n  .load(path_to_towers)\n  .withColumn(\"locality\", col(\"admin2Name\"))\n  .withColumnRenamed(\"CI\", \"cell_id\")\n\ncells.persist(StorageLevel.MEMORY_AND_DISK)\ncells.createOrReplaceTempView(\"cells\")\n\ncalls.persist(StorageLevel.MEMORY_AND_DISK)\ncalls.createOrReplaceTempView(\"calls\")\n    ",
      "user": "anonymous",
      "dateUpdated": "2020-07-13 00:47:18.376",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import org.apache.spark.sql.functions.{split, lit, window, concat, unix_timestamp, to_timestamp, date_format}\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql.expressions.Window\nimport spark.implicits._\nimport org.apache.spark.storage.StorageLevel\ncalls: org.apache.spark.sql.DataFrame \u003d [antenna_id: int, time: timestamp ... 9 more fields]\ncells: org.apache.spark.sql.DataFrame \u003d [site_id: string, Name: string ... 19 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1594008440531_2015379085",
      "id": "20200706-010552_1094959392",
      "dateCreated": "2020-07-06 04:07:20.531",
      "dateStarted": "2020-07-13 00:47:18.383",
      "dateFinished": "2020-07-13 00:47:59.034",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val odMatrixDirectedConsecutivePairsPerDay \u003d spark.sql(s\"\"\"\n    WITH located AS (SELECT msisdn,\n                             locality,\n                             call_date,\n                             row_number() OVER (PARTITION BY msisdn, call_date\n                                                ORDER BY call_datetime ASC) AS rank\n                      FROM calls\n                           INNER JOIN cells ON calls.site_id \u003d cells.site_id\n                      WHERE (calls.call_date \u003e\u003d \u00272020-02-01\u0027)\n                        AND (calls.call_date \u003c\u003d CURRENT_DATE))\n\n       SELECT call_date,\n              locality_from,\n              locality_to,\n              count(*)\n       FROM (SELECT source.msisdn,\n                    source.call_date,\n                    source.locality AS locality_from,\n                    sink.locality AS locality_to\n             FROM located AS source\n                  INNER JOIN (SELECT msisdn,\n                                     locality,\n                                     call_date,\n                                     rank - 1 AS rank\n                              FROM located) AS sink USING (msisdn, call_date, rank)\n             GROUP BY msisdn, call_date, locality_from, locality_to) AS joined\n       GROUP BY call_date, locality_from, locality_to\n       HAVING count(*) \u003e 15 \n\"\"\")\nodMatrixDirectedConsecutivePairsPerDay.createOrReplaceTempView(\"od_matrix_directed_consecutive_pairs_per_day\")",
      "user": "anonymous",
      "dateUpdated": "2020-07-13 00:48:10.431",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "odMatrixDirectedConsecutivePairsPerDay: org.apache.spark.sql.DataFrame \u003d [call_date: date, locality_from: string ... 2 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1594008440531_1212597013",
      "id": "20200706-023816_1473159979",
      "dateCreated": "2020-07-06 04:07:20.531",
      "dateStarted": "2020-07-13 00:48:10.440",
      "dateFinished": "2020-07-13 00:48:10.997",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.sql\nselect * from od_matrix_directed_consecutive_pairs_per_day",
      "user": "anonymous",
      "dateUpdated": "2020-07-13 00:48:15.871",
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "fontSize": 9.0,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "call_date": "string",
                      "locality_from": "string",
                      "locality_to": "string",
                      "count(1)": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "call_date\tlocality_from\tlocality_to\tcount(1)\n2020-04-03\tWestern Area Rural\tPort Loko\t1339\n2020-04-03\tPort Loko\tKambia\t513\n2020-04-03\tBo\tPujehun\t139\n2020-04-03\tWestern Area Rural\tWestern Area Rural\t161831\n2020-04-03\tBo\tMoyamba\t214\n2020-04-03\tKenema\tTonkolili\t18\n2020-04-03\tPort Loko\tnull\t2153\n2020-04-03\tnull\tPort Loko\t3190\n2020-04-03\tPort Loko\tMoyamba\t36\n2020-04-03\tKambia\tKambia\t24867\n2020-04-03\tWestern Area Urban\tWestern Area Rural\t17727\n2020-04-03\tTonkolili\tKoinadugu\t36\n2020-04-03\tMoyamba\tBonthe\t284\n2020-04-03\tPort Loko\tWestern Area Rural\t1172\n2020-04-03\tWestern Area Urban\tWestern Area Urban\t339714\n2020-04-03\tPort Loko\tBombali\t375\n2020-04-03\tBombali\tBombali\t72239\n2020-04-03\tTonkolili\tKono\t85\n2020-04-03\tBombali\tPort Loko\t322\n2020-04-03\tMoyamba\tTonkolili\t146\n2020-04-03\tKenema\tKailahun\t150\n2020-04-03\tBombali\tKambia\t29\n2020-04-03\tKono\tKailahun\t16\n2020-04-03\tnull\tnull\t14358\n2020-04-03\tKoinadugu\tBombali\t54\n2020-04-03\tTonkolili\tKenema\t32\n2020-04-03\tTonkolili\tBombali\t746\n2020-04-03\tBonthe\tBonthe\t8257\n2020-04-03\tWestern Area Urban\tPort Loko\t927\n2020-04-03\tMoyamba\tBo\t219\n2020-04-03\tTonkolili\tTonkolili\t40119\n2020-04-03\tPujehun\tPujehun\t10439\n2020-04-03\tMoyamba\tMoyamba\t13490\n2020-04-03\tKenema\tKenema\t40843\n2020-04-03\tnull\tWestern Area Urban\t9918\n2020-04-03\tWestern Area Urban\tnull\t7629\n2020-04-03\tKambia\tPort Loko\t468\n2020-04-03\tKoinadugu\tTonkolili\t36\n2020-04-03\tBo\tKenema\t189\n2020-04-03\tKailahun\tKenema\t92\n2020-04-03\tWestern Area Rural\tWestern Area Urban\t16891\n2020-04-03\tTonkolili\tPort Loko\t260\n2020-04-03\tBombali\tKoinadugu\t54\n2020-04-03\tMoyamba\tPort Loko\t44\n2020-04-03\tPort Loko\tPort Loko\t56657\n2020-04-03\tKono\tTonkolili\t72\n2020-04-03\tWestern Area Rural\tnull\t75\n2020-04-03\tnull\tWestern Area Rural\t30\n2020-04-03\tPort Loko\tTonkolili\t366\n2020-04-03\tTonkolili\tBo\t30\n2020-04-03\tBo\tBo\t38320\n2020-04-03\tKailahun\tKailahun\t17709\n2020-04-03\tBo\tTonkolili\t32\n2020-04-03\tPujehun\tBo\t72\n2020-04-03\tKenema\tBo\t156\n2020-04-03\tKono\tKono\t38980\n2020-04-03\tPort Loko\tWestern Area Urban\t955\n2020-04-03\tBonthe\tMoyamba\t237\n2020-04-03\tKambia\tBombali\t28\n2020-04-03\tKoinadugu\tKoinadugu\t17267\n2020-04-03\tBombali\tTonkolili\t830\n2020-04-03\tTonkolili\tMoyamba\t134\n"
          },
          {
            "type": "TEXT",
            "data": ""
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1594008440532_-575468427",
      "id": "20200706-024848_266901746",
      "dateCreated": "2020-07-06 04:07:20.532",
      "dateStarted": "2020-07-13 00:48:15.879",
      "dateFinished": "2020-07-13 00:49:47.166",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "odMatrixDirectedConsecutivePairsPerDay.saveToS3(\"od_matrix_directed_consecutive_pairs_per_day\")",
      "user": "anonymous",
      "dateUpdated": "2020-07-13 00:50:18.328",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1594008440532_2136052866",
      "id": "20200706-024905_728820264",
      "dateCreated": "2020-07-06 04:07:20.532",
      "dateStarted": "2020-07-13 00:50:18.336",
      "dateFinished": "2020-07-13 00:54:02.633",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "user": "anonymous",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1594601418328_-1419607109",
      "id": "20200713-005018_1821058309",
      "dateCreated": "2020-07-13 00:50:18.328",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Flowminder/od_matrix_directed_consecutive_pairs_per_day",
  "id": "2FCJKUE23",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}